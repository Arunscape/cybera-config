version: '3'

services:
  traefik:
    image: traefik:v2.2
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme:/acme
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.woosaree.xyz`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=arunscape:$$2y$$16$$BaUIGxHpeedg6M48UqzDuO/ReGzhOpB53Dhj22YKZYctDCb1WXU.C"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.woosaree.xyz`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=http"
      - "traefik.http.routers.traefik-secure.service=api@internal"
  
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - web
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=http"
      - "traefik.http.routers.portainer.rule=Host(`portainer.woosaree.xyz`)"
      - "traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.portainer.middlewares=portainer-https-redirect"
      - "traefik.http.routers.portainer-secure.entrypoints=https"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.woosaree.xyz`)"
      - "traefik.http.routers.portainer-secure.tls=true"
      - "traefik.http.routers.portainer-secure.tls.certresolver=http"
      - "traefik.http.routers.portainer-secure.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.docker.network=web"
  
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    labels:
      - "traefik.enable=false"
    networks:
      - internal
    volumes:
      - ./postgres/data/:/var/lib/postgresql/data
    env_file:
      - ./postgres/.env


  gitea:
    image: gitea/gitea
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA_SSH_PORT=2222
    restart: always
    networks:
      - web
      - internal
    volumes:
      - ./gitea:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.entrypoints=http"
      - "traefik.http.routers.gitea.rule=Host(`git.woosaree.xyz`)"
      - "traefik.http.middlewares.gitea-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.gitea.middlewares=gitea-https-redirect"
      - "traefik.http.routers.gitea-secure.entrypoints=https"
      - "traefik.http.routers.gitea-secure.rule=Host(`git.woosaree.xyz`)"
      - "traefik.http.routers.gitea-secure.tls=true"
      - "traefik.http.routers.gitea-secure.tls.certresolver=http"
      - "traefik.http.routers.gitea-secure.service=gitea"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
      - "traefik.docker.network=web"
    networks:
      - internal
      - web
    depends_on:
      - postgres
      - traefik
    ports:
      - "2222:2222"
  
  cocalc:
    image: sagemathinc/cocalc
    container_name: cocalc
    #environment:
    restart: always
    networks:
      - web
    volumes:
      - ./cocalc:/projects
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cocalc.entrypoints=http"
      - "traefik.http.routers.cocalc.rule=Host(`cocalc.woosaree.xyz`)"
      - "traefik.http.middlewares.cocalc-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.cocalc.middlewares=cocalc-https-redirect"
      - "traefik.http.routers.cocalc-secure.entrypoints=https"
      - "traefik.http.routers.cocalc-secure.rule=Host(`cocalc.woosaree.xyz`)"
      - "traefik.http.routers.cocalc-secure.tls=true"
      - "traefik.http.routers.cocalc-secure.tls.certresolver=http"
      - "traefik.http.routers.cocalc-secure.service=cocalc"
      - "traefik.http.services.cocalc.loadbalancer.server.port=9000"
      - "traefik.docker.network=web"
    networks:
      - web
    depends_on:
      - traefik
    ports:
      - "9000:443"
  vikunja-backend:
    image: vikunja/api
    container_name: vikunja-backend
    environment:
      VIKUNJA_DATABASE_HOST: postgres
      VIKUNJA_DATABASE_PASSWORD: gitea
      VIKUNJA_DATABASE_TYPE: postgres
      VIKUNJA_DATABASE_USER: gitea
      VIKUNJA_DATABASE_DATABASE: gitea
    volumes:
      - ./vikunja/frontend/files:/app/vikunja/files
    networks:
      - web
      - internal
    depends_on:
      - traefik
      - postgres
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vikunja-api.rule=Host(`vikunja.woosaree.xyz`) && PathPrefix(`/api/v1`)"
      - "traefik.http.routers.vikunja-api.entrypoints=http"
      - "traefik.http.routers.vikunja-api.rule=Host(`vikunja.woosaree.xyz`)"
      - "traefik.http.middlewares.vikunja-api-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.vikunja-api.middlewares=vikunja-api-https-redirect"
      - "traefik.http.routers.vikunja-api-secure.entrypoints=https"
      - "traefik.http.routers.vikunja-api-secure.rule=Host(`vikunja.woosaree.xyz`)"
      - "traefik.http.routers.vikunja-api-secure.tls=true"
      - "traefik.http.routers.vikunja-api-secure.tls.certresolver=http"
      - "traefik.http.routers.vikunja-api-secure.service=vikunja-api"
        #      - "traefik.http.services.vikunja-api.loadbalancer.server.port=8000"
      - "traefik.docker.network=web"
  vikunja-frontend:
    image: vikunja/frontend
    container_name: vikunja-frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vikunja.entrypoints=http"
      - "traefik.http.routers.vikunja.rule=Host(`vikunja.woosaree.xyz`)"
      - "traefik.http.middlewares.vikunja-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.vikunja.middlewares=vikunja-https-redirect"
      - "traefik.http.routers.vikunja-secure.entrypoints=https"
      - "traefik.http.routers.vikunja-secure.rule=Host(`vikunja.woosaree.xyz`)"
      - "traefik.http.routers.vikunja-secure.tls=true"
      - "traefik.http.routers.vikunja-secure.tls.certresolver=http"
      - "traefik.http.routers.vikunja-secure.service=vikunja"
        #      - "traefik.http.services.vikunja.loadbalancer.server.port=8000"
      - "traefik.docker.network=web"
    networks:
      - web
      - internal
    restart: unless-stopped

  connect4:
    image: arunscape/connect4-server
    container_name: connect4
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.connect4.entrypoints=http"
      - "traefik.http.routers.connect4.rule=Host(`connect4.woosaree.xyz`)"
      - "traefik.http.middlewares.connect4-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.connect4.middlewares=connect4-https-redirect"
      - "traefik.http.routers.connect4-secure.entrypoints=https"
      - "traefik.http.routers.connect4-secure.rule=Host(`connect4.woosaree.xyz`)"
      - "traefik.http.routers.connect4-secure.tls=true"
      - "traefik.http.routers.connect4-secure.tls.certresolver=http"
      - "traefik.http.routers.connect4-secure.service=connect4"
      - "traefik.http.services.connect4.loadbalancer.server.port=8000"
      - "traefik.docker.network=web"
    networks:
      - web
      - internal
  mongo:
    image: mongo
    container_name: mongo
    networks:
      - internal
    labels:
      - "traefik.enable=false"


networks:
  web:
    external: true

  internal:
    external: false
